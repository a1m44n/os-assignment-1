public BusSchedule(String busName, String route, String departureLocation, String arrivalLocation, int interval, TimeUnit timeUnit) {
    this.busName = busName;
    this.route = route;
    this.departureLocation = departureLocation;
    this.arrivalLocation = arrivalLocation;
    this.interval = interval;
    this.timeUnit = timeUnit;
}

@Override
public void run() {
    while (true) {
        // Get the current time and add the interval to get the departure time
        Calendar departureTime = Calendar.getInstance();
        departureTime.add(Calendar.SECOND, interval);

        // Get the arrival time by adding the duration of the journey to the departure time
        Calendar arrivalTime = Calendar.getInstance();
        arrivalTime.setTimeInMillis(departureTime.getTimeInMillis() + getJourneyDuration());

        // Format the times and output the schedule
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        String formattedDepartureTime = sdf.format(departureTime.getTime());
        String formattedArrivalTime = sdf.format(arrivalTime.getTime());
        System.out.println(busName + " departing at " + formattedDepartureTime + " from " + departureLocation +
                ", arriving at " + formattedArrivalTime + " at " + arrivalLocation + " on " + route);

        // Sleep for the specified interval
        try {
            timeUnit.sleep(interval);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}

// Get the duration of the journey in milliseconds
private long getJourneyDuration() {
    // This is a dummy implementation that returns a fixed duration of 30 minutes
    return TimeUnit.MINUTES.toMillis(30);
}
